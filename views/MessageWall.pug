doctype html
head
  meta(charset='UTF-8')
  meta(name='viewport' content='width=device-width, initial-scale=1.0')
  link(href='https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css' rel='stylesheet' integrity='sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3' crossorigin='anonymous')
  link(rel='stylesheet' type='text/css' href='/stylesheets/index.css')
  script(src='/javascripts/posts.js')
  title Message Wall
.links
  a.btn.btn-primary(onclick='routeToDirectory()') Back
#post-wrapper
  h2#message-header Message Wall
  #message-board.list-group
  form#post-form(method='POST')
    textarea#message(placeholder='Type your message here...' required='')
    button#post-btn.btn.btn-primary(type='button' onclick='postChatMessage()') Post
script(src='https://cdn.socket.io/4.7.4/socket.io.min.js')
script.
  const socket = io();
  let username = "";
  function routeToDirectory(){
    const user_id = #{user_id}
    window.location.href = `/directory/${user_id}`
  }
    socket.emit('registered', #{user_id});
  function postChatMessage(){
  let textArea = document.getElementById("message")
  let textContent = textArea.value
  let path = window.location.pathname;
  // Get the user_id (assuming it's the last part of the URL)

  let userId = #{user_id}
  console.log(userId); // Output: 1 (for the URL /users/1)
  const postData = {
  username: username, 
  userId: userId,
  status: "status",
  dateTime: new Date().toLocaleString(),
  content: textContent
  };
  socket.emit("postData", postData);
    console.log(postData);
  }
  window.onload = async function() {
  const userId = #{user_id}
    const response = await fetch(`/users/${userId}`, {
      method: 'GET',
      headers: {
        'Content-Type': 'application/json',
      },
    }).then(response => response.json()).then((data) => {
      console.log(data.data[0].username);
      username = data.data[0].username;
    })

  }
      async function logout(){
      const userId = #{user_id};
      const requestBody = {
      user_id: userId,
      updateAt: "online_status",
      updateValue: "offline"
      }
      await fetch(`/users/${userId}`, {
      method: 'PUT',
      headers: {
      'Content-Type': 'application/json',
      },
      body: JSON.stringify(requestBody),
      }).then(response=> response.json()).then((data)=>{
        console.log(data.message)
      })
      window.location.href = `/`;
      }
  socket.on("postData", (postData) => {
    let messageBoard = document.getElementById("message-board")
    let messageElement = constructChatMessage(
        postData.username,
        postData.content,
        postData.status,
        postData.dateTime,
    );
    messageBoard.appendChild(messageElement);
    console.log(username);
    document.getElementById("message-board").scrollTop = messageBoard.scrollHeight;
      });
  
  
