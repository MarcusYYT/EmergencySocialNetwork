doctype html
head
  meta(charset='UTF-8')
  meta(name='viewport' content='width=device-width, initial-scale=1.0')
  link(href='https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css' rel='stylesheet' integrity='sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3' crossorigin='anonymous')
  link(rel='stylesheet', href='https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css')
  link(rel='stylesheet' type='text/css' href='/stylesheets/index.css')
  script(src='/javascripts/posts.js')
  script(src='/javascripts/filterStopWords.js')
  title Message Wall
.links
  a.btn.btn-primary(onclick='routeToDirectory()') Back
#post-wrapper
  h2#message-header Group Chats
  form.search-form.input-group.mb-3(onsubmit="submitSearch()" onchange="searchFinished()")
    input.search-input.form-control(type='text', name='search', placeholder='Search...')
  #message-board.list-group
  form#post-form(method='POST')
    textarea#message(placeholder='Type your message here...' required='')
    button#post-btn.btn.btn-primary(type='button' onclick='postChatMessage()') Post
script(src='https://cdn.socket.io/4.7.4/socket.io.min.js')
script.

  const socket = io();
  socket.on('connect', async function() {
        console.log('Connected to server');
        console.log('Socket ID:', socket.id);
        const userId = #{user_id};
        await fetch(`/sockets`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({user_id: userId, socket_id: socket.id, operation:'register'})})
                .then(response => response.json())
            .then(data => {
                console.log(data);
            })
            .catch(error => {
                console.error('Error register socket:', error);
            });
  })
  let username = "";
  let status = "";

  function routeToDirectory(){
    const user_id = #{user_id}
    window.location.href = `/directory/${user_id}`
  }

  async function postChatMessage(){
    let textArea = document.getElementById("message")
    let textContent = textArea.value
    let path = window.location.pathname;
    textArea.value = "";
    // Get the user_id (assuming it's the last part of the URL)

    let userId = #{user_id}

    const postData = {
      username: username,
      user_id: userId,
      status: status,
      dateTime: new Date().toLocaleString(),
      content: textContent
    };

      await fetch('/posts', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(postData)})
            .then(response => response.json())
            .then(data => {
                console.log(data);
            })
            .catch(error => {
                console.error('Error fetching data:', error);
            });
  }

  async function submitSearch() {
      event.preventDefault()

      let searchInput = document.getElementsByClassName('search-input')[0];
      let searchValue = searchInput.value;

      let filteredSearchValue = filterStopWords(searchValue)

      if(filteredSearchValue !== ""){
        await fetch(`/search?q=${filteredSearchValue}&domain=Posts`, {
          method: 'GET',
          headers: {
              'Content-Type': 'application/json',
          }
        }).then(response => response.json()).then(async (data) => {
            console.log("Data in response::")
            console.log(data.data);
            isStatus = false;
            renderSearchedPosts(data.data, false, false)
        }).catch(error => {
            console.error(error);
        })
      }
      else{
        renderEmptyMessage();
      }
  }

  async function searchFinished(){

        let searchInput = document.getElementsByClassName('search-input')[0];
        let searchValue = searchInput.value;

        if (searchValue === ""){
          await fetch('/posts')
            .then(response => response.json())
            .then(data => {
                console.log(data);
                renderChats(data.data, false)
            })
            .catch(error => {
                console.error('Error fetching data:', error);
            });
        }
      }

  window.onload = async function() {
    const userId = #{user_id}
    const response = await fetch(`/users/${userId}`, {
      method: 'GET',
      headers: {
        'Content-Type': 'application/json',
      },
    }).then(response => response.json()).then((data) => {
      username = data.data[0].username;
      status = data.data[0].status
    })

    await fetch('/posts')
         .then(response => response.json())
         .then(data => {
             console.log(data);
             renderChats(data.data, false)
         })
         .catch(error => {
             console.error('Error fetching data:', error);
         });
  }

  async function logout(){
    const userId = #{user_id};
    const requestBody = {
      user_id: userId,
      updateAt: "online_status",
      updateValue: "offline"
    }

    await fetch(`/users/${userId}`, {
      method: 'PUT',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(requestBody),
      }).then(response=> response.json()).then((data)=>{
        console.log(data.message)
      })
      window.location.href = `/`;
  }

  socket.on("postData", (postData) => {
    let messageBoard = document.getElementById("message-board")
    let msgData = {
        sender: postData.username,
        message: postData.content,
        status: postData.status,
        dateTime: postData.dateTime
    }    
    let messageElement = constructChatMessage(msgData);
    messageBoard.appendChild(messageElement);
    document.getElementById("message-board").scrollTop = messageBoard.scrollHeight;
  });
  
  
