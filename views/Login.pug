head
  meta(charset='utf-8')
  meta(name='viewport', content='width=device-width, initial-scale=1.0')
  link(href='https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css', rel='stylesheet', integrity='sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3', crossorigin='anonymous')
  link(rel='stylesheet', type='text/css', href='/stylesheets/index.css')
  title Login
.LoginBox
  form#loginForm.login-form(action='/auth/login', method='post')
    h2 Emergency Social Network
    input(type='text', name='username', value='', placeholder='Username')
    input(type='password', name='password', value='', placeholder='Password')
    button#signinbtn.btn.btn-primary(type='submit') Login
    button#registerBtn.btn.btn-primary(onclick='register()', type='button') Register
script.
  if (new URL(window.location.href).searchParams.get('LoginSuc') === 'false') {
  alert('Login Failed');
  }
  async function register() {
  let form = document.getElementById('loginForm');
  let username = form.username.value.trim().toLowerCase();
  let password = form.password.value.trim();
  if (username.length < 3) {
  alert("The username must be at least 3 characters long");
  return false;
  }
  if (password.length < 4) {
  alert("The password has to be at least 4 characters long");
  return false;
  }
  if (password === "" || username === "") {
  alert("Any input field cannot be empty");
  return false;
  }
  await fetch('/auth/register', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ username: username, password:password }),
  }).then(response => response.json()
  ).then((data)=>{
    if(data.success===true){
        alert(data.message)
    } else {
        alert(data.message)
    }
  });
  }
